[
    {
        "text": "The machines have won.",
        "start": 10.94,
        "duration": 3.02
    },
    {
        "text": "Computers can now defeat humans at pretty\nmuch any game we’ve ever invented.",
        "start": 13.96,
        "duration": 4.96
    },
    {
        "text": "And all because of some clever tricks we’ve\ncome up with for programming artificial intelligence,",
        "start": 18.92,
        "duration": 4.44
    },
    {
        "text": "or AI.",
        "start": 23.36,
        "duration": 1.0
    },
    {
        "text": "The simplest definition of AI is a computer\nprogram designed to solve a problem.",
        "start": 24.36,
        "duration": 4.91
    },
    {
        "text": "Most programs, including probably all of the\nones letting you watch this video right now,",
        "start": 29.27,
        "duration": 4.14
    },
    {
        "text": "don’t solve problems.",
        "start": 33.41,
        "duration": 1.3
    },
    {
        "text": "Instead, they execute instructions, that they\nwere given by human programmers.",
        "start": 34.71,
        "duration": 4.62
    },
    {
        "text": "They don’t try to come up with their own\nsolutions for what they should do to accomplish",
        "start": 39.33,
        "duration": 3.51
    },
    {
        "text": "a task.",
        "start": 42.84,
        "duration": 1.0
    },
    {
        "text": "AIs do try to come up with their own solutions.",
        "start": 43.84,
        "duration": 2.81
    },
    {
        "text": "The smarter an AI is, the more complicated\nthe problem it can solve.",
        "start": 46.65,
        "duration": 3.96
    },
    {
        "text": "Since the dawn of computer programming, we’ve\nbeen teaching AIs how to play games.",
        "start": 50.61,
        "duration": 4.28
    },
    {
        "text": "Things like checkers, and chess, and recently,\nthe Chinese board game Go.",
        "start": 54.89,
        "duration": 3.84
    },
    {
        "text": "We do that because games are a great way to\nmeasure how smart an AI actually is.",
        "start": 58.73,
        "duration": 4.53
    },
    {
        "text": "Playing, and winning, a game requires problem\nsolving.",
        "start": 63.26,
        "duration": 3.27
    },
    {
        "text": "And the ability to solve problems is one of\nthe benchmarks of intelligence.",
        "start": 66.53,
        "duration": 3.64
    },
    {
        "text": "It helps that the problems are very clearly\ndefined, for both the human audience and the",
        "start": 70.17,
        "duration": 3.93
    },
    {
        "text": "computer program.",
        "start": 74.1,
        "duration": 1.26
    },
    {
        "text": "There are no ambiguous results: either the\nAI can play checkers, or it can’t.",
        "start": 75.36,
        "duration": 4.27
    },
    {
        "text": "This makes games the perfect lab environment\nfor creating new kinds of AI, which is why",
        "start": 79.63,
        "duration": 4.18
    },
    {
        "text": "the history of AI is often the history of\nAIs playing games.",
        "start": 83.81,
        "duration": 3.89
    },
    {
        "text": "The first game an AI ever played and won against\na human opponent was a checkers program, written",
        "start": 87.7,
        "duration": 4.83
    },
    {
        "text": "in the 1950s by American computer scientist\nArthur Samuel for the IBM 704 computer.",
        "start": 92.53,
        "duration": 5.46
    },
    {
        "text": "This was a machine that you had to program\nby feeding magnetic tape into a big drum.",
        "start": 97.99,
        "duration": 5.87
    },
    {
        "text": "Checkers is a simple game.",
        "start": 103.86,
        "duration": 1.3
    },
    {
        "text": "But the IBM 704 was a pretty simple machine.",
        "start": 105.16,
        "duration": 3.27
    },
    {
        "text": "It couldn’t run the outcome of every possible\nmove it could make by trial and error in order",
        "start": 108.43,
        "duration": 4.73
    },
    {
        "text": "to find the best one.",
        "start": 113.16,
        "duration": 1.0
    },
    {
        "text": "At least, not in a reasonable amount of time.",
        "start": 114.16,
        "duration": 2.05
    },
    {
        "text": "If it could, that would be solving the problem\nof winning a game of checkers with brute force.",
        "start": 116.21,
        "duration": 3.74
    },
    {
        "text": "The brute force approach involves crunching\na lot of numbers: the computer plays out every",
        "start": 119.95,
        "duration": 4.42
    },
    {
        "text": "possible game that could take place after\nevery possible move, then picks the move with",
        "start": 124.37,
        "duration": 4.55
    },
    {
        "text": "the highest probability of leading to a win.",
        "start": 128.92,
        "duration": 2.2
    },
    {
        "text": "That’s not very creative, but it’s definitely\na valid way to solve the problem.",
        "start": 131.12,
        "duration": 4.25
    },
    {
        "text": "And we’ll come back to it in a few minutes.",
        "start": 135.37,
        "duration": 1.72
    },
    {
        "text": "The problem is, the brute force approach uses\na lot of computing resources to run all those",
        "start": 137.09,
        "duration": 4.34
    },
    {
        "text": "numbers.",
        "start": 141.43,
        "duration": 1.0
    },
    {
        "text": "Those resources just weren’t available back\nin the 1950s.",
        "start": 142.43,
        "duration": 2.42
    },
    {
        "text": "So the first game-playing AI was made possible\nthanks to something called heuristics.",
        "start": 144.85,
        "duration": 4.18
    },
    {
        "text": "And every AI since then has used them.",
        "start": 149.03,
        "duration": 2.78
    },
    {
        "text": "A heuristic is basically a rule of thumb.",
        "start": 151.81,
        "duration": 2.73
    },
    {
        "text": "It may not always be exactly right … but\nit’s almost always mostly right.",
        "start": 154.54,
        "duration": 4.27
    },
    {
        "text": "In computer science, a heuristic is an algorithm\nthat limits brute force searching by selecting",
        "start": 158.81,
        "duration": 4.5
    },
    {
        "text": "solutions that may not be the best … but\nare good enough.",
        "start": 163.31,
        "duration": 3.25
    },
    {
        "text": "So a checkers algorithm might say: okay, you\nfound a move that lets you capture an opponent’s piece.",
        "start": 166.56,
        "duration": 5.54
    },
    {
        "text": "You can stop now!",
        "start": 172.1,
        "duration": 1.0
    },
    {
        "text": "Just go with that move.",
        "start": 173.1,
        "duration": 1.0
    },
    {
        "text": "Simple heuristical programming like that was\nenough to conquer checkers.",
        "start": 174.1,
        "duration": 2.89
    },
    {
        "text": "The next game an AI faced was poker.",
        "start": 176.99,
        "duration": 2.38
    },
    {
        "text": "In the 1970s, computer scientist Donald Waterman\nwrote a program that could play draw poker",
        "start": 179.37,
        "duration": 5.25
    },
    {
        "text": "— the kind where you’re dealt five cards\nand can replace some of them, typically up",
        "start": 184.62,
        "duration": 3.561
    },
    {
        "text": "to three cards.",
        "start": 188.181,
        "duration": 1.0
    },
    {
        "text": "He did it by developing something called a\nproduction system, another thing that you’ll",
        "start": 189.181,
        "duration": 4.169
    },
    {
        "text": "now find in AIs everywhere.",
        "start": 193.35,
        "duration": 1.94
    },
    {
        "text": "Production systems use pre-programmed rules\nto categorize symbols, like those on a card.",
        "start": 195.29,
        "duration": 4.66
    },
    {
        "text": "Waterman's system sorted cards as more or\nless valuable depending on what other cards",
        "start": 199.95,
        "duration": 4.649
    },
    {
        "text": "it already had in its hand.",
        "start": 204.599,
        "duration": 1.25
    },
    {
        "text": "Like, on its own, a four of clubs isn’t\nmuch to write home about, but it has a lot",
        "start": 205.849,
        "duration": 3.671
    },
    {
        "text": "more value if you already have the four of\ndiamonds and the four of spades.",
        "start": 209.52,
        "duration": 4.08
    },
    {
        "text": "The system could then calculate how good its\nhand was, and whether or not it should stay",
        "start": 213.6,
        "duration": 3.8
    },
    {
        "text": "in or fold out, by comparing the value of\nits hand to its preprogrammed measures of",
        "start": 217.4,
        "duration": 4.66
    },
    {
        "text": "what a 'good' or 'bad' hand was.",
        "start": 222.06,
        "duration": 2.53
    },
    {
        "text": "Heuristics and production systems.",
        "start": 224.59,
        "duration": 2.08
    },
    {
        "text": "Algorithms that apply rules of thumb, and\nprograms that apply complex and comparative",
        "start": 226.67,
        "duration": 4.25
    },
    {
        "text": "systems of rules.",
        "start": 230.92,
        "duration": 1.14
    },
    {
        "text": "Put those together, and creating AIs that\ncould play basic board games became a walk",
        "start": 232.06,
        "duration": 4.1
    },
    {
        "text": "in the park.",
        "start": 236.16,
        "duration": 1.0
    },
    {
        "text": "Chess is not a basic board game, though.",
        "start": 237.16,
        "duration": 2.31
    },
    {
        "text": "It’s a grown-up board game, and winning\nit was going to take some grown-up technology.",
        "start": 239.47,
        "duration": 4.53
    },
    {
        "text": "The first chess machines were built in the\n1980s, at Carnegie Mellon University.",
        "start": 244.0,
        "duration": 4.099
    },
    {
        "text": "The most successful of these early machines\nwas Deep Thought, which could calculate the",
        "start": 248.099,
        "duration": 4.011
    },
    {
        "text": "outcomes of 700,000 moves per second.",
        "start": 252.11,
        "duration": 3.06
    },
    {
        "text": "And Deep Thought actually managed to defeat\na chess grandmaster, in 1988.",
        "start": 255.17,
        "duration": 3.68
    },
    {
        "text": "But there’s a big difference between just\nsome grandmaster, and the greatest chess player",
        "start": 258.85,
        "duration": 4.47
    },
    {
        "text": "in the world.",
        "start": 263.32,
        "duration": 1.09
    },
    {
        "text": "That man, in the 80s, 90s, and actually still\ntoday, is Garry Kasparov.",
        "start": 264.41,
        "duration": 4.43
    },
    {
        "text": "Deep Thought was not on Kasparov’s level.",
        "start": 268.84,
        "duration": 2.53
    },
    {
        "text": "Beating Kasparov meant getting stronger, and\nfaster.",
        "start": 271.37,
        "duration": 2.93
    },
    {
        "text": "Like, a lot.",
        "start": 274.3,
        "duration": 1.25
    },
    {
        "text": "Upgrading Deep Thought involved a few improvements.",
        "start": 275.55,
        "duration": 2.29
    },
    {
        "text": "Number one, more memory and more multiprocessors.",
        "start": 277.84,
        "duration": 3.12
    },
    {
        "text": "That's raw computing power.",
        "start": 280.96,
        "duration": 1.57
    },
    {
        "text": "Deep Blue, Deep Thought’s successor, was\nsimply a more powerful machine.",
        "start": 282.53,
        "duration": 3.81
    },
    {
        "text": "Number two, better software.",
        "start": 286.34,
        "duration": 1.34
    },
    {
        "text": "When you're dealing with millions of search\nresults, all being compared to each other,",
        "start": 287.68,
        "duration": 4.17
    },
    {
        "text": "slowdown is a big problem.",
        "start": 291.85,
        "duration": 1.99
    },
    {
        "text": "So Deep Blue's software was streamlined for\nparallel processing.",
        "start": 293.84,
        "duration": 3.31
    },
    {
        "text": "It was also taught to factor in some of the\nmore nuanced measures of a favorable chess position.",
        "start": 297.15,
        "duration": 4.78
    },
    {
        "text": "Better heuristics, in other words.",
        "start": 301.93,
        "duration": 1.26
    },
    {
        "text": "The search speed for the first version of\nDeep Blue was about 50 to 100 million chess",
        "start": 303.19,
        "duration": 4.18
    },
    {
        "text": "positions per second.",
        "start": 307.37,
        "duration": 1.22
    },
    {
        "text": "And when it was matched up against Garry Kasparov\n… it lost.",
        "start": 308.59,
        "duration": 3.25
    },
    {
        "text": "Pretty decisively, with two wins against Kasparov's\nfour.",
        "start": 311.84,
        "duration": 3.69
    },
    {
        "text": "Calculating the outcomes of 100 million chess\npositions per second was not enough to beat",
        "start": 315.53,
        "duration": 4.6
    },
    {
        "text": "the human world champion of chess.",
        "start": 320.13,
        "duration": 1.97
    },
    {
        "text": "So team Deep Blue more than doubled the number\nof chips in the system, and improved the software",
        "start": 322.1,
        "duration": 5.15
    },
    {
        "text": "so that each chip was about 25% more effective.",
        "start": 327.25,
        "duration": 3.09
    },
    {
        "text": "The version of Deep Blue that played a rematch\ntournament against Kasparov in 1997 could",
        "start": 330.34,
        "duration": 4.21
    },
    {
        "text": "calculate over 300 million chess positions\nper second.",
        "start": 334.55,
        "duration": 4.31
    },
    {
        "text": "And then it won.",
        "start": 338.86,
        "duration": 1.66
    },
    {
        "text": "Deep Blue was an incredible feat of computer\nprogramming.",
        "start": 340.52,
        "duration": 3.01
    },
    {
        "text": "When it defeated Garry Kasparov, it was the\nmost complex AI in the world.",
        "start": 343.53,
        "duration": 4.56
    },
    {
        "text": "But it mostly won through brute force.",
        "start": 348.09,
        "duration": 2.39
    },
    {
        "text": "It crunched the numbers for every possible\nmove it or its opponent could make, then picked",
        "start": 350.48,
        "duration": 4.37
    },
    {
        "text": "the one most likely to lead to victory.",
        "start": 354.85,
        "duration": 1.75
    },
    {
        "text": "If it didn’t win, its programmers upgraded\nit so it could crunch even more numbers.",
        "start": 356.6,
        "duration": 3.81
    },
    {
        "text": "That approach was not going to work with the\ngame of Go.",
        "start": 360.41,
        "duration": 3.259
    },
    {
        "text": "We talked about Go here on SciShow when Google's\nAlphaGo program defeated world Go champion",
        "start": 363.669,
        "duration": 4.481
    },
    {
        "text": "Lee Sedol, in March of 2016.",
        "start": 368.15,
        "duration": 2.12
    },
    {
        "text": "But let's go over the factors that made creating\na Go program such a daunting task.",
        "start": 370.27,
        "duration": 4.23
    },
    {
        "text": "If you grew up in the West, you might not\nbe familiar with Go.",
        "start": 374.5,
        "duration": 2.66
    },
    {
        "text": "It’s a Chinese game that's existed unchanged\nfor thousands of years.",
        "start": 377.16,
        "duration": 4.099
    },
    {
        "text": "It's sometimes described as 'Eastern chess,'\nbut it’s much more complicated than chess,",
        "start": 381.259,
        "duration": 4.701
    },
    {
        "text": "especially for a computer.",
        "start": 385.96,
        "duration": 1.82
    },
    {
        "text": "First of all, a Go board is bigger than a\nchess board.",
        "start": 387.78,
        "duration": 2.28
    },
    {
        "text": "Go is played on a 19x19 grid, while a chess\nboard is 8x8.",
        "start": 390.06,
        "duration": 4.2
    },
    {
        "text": "But that's underselling the complexity of\nGo, because you don't play the stones — ‘stones’",
        "start": 394.26,
        "duration": 4.75
    },
    {
        "text": "are what the pieces are called in Go — inside\nthe grid tiles.",
        "start": 399.01,
        "duration": 3.159
    },
    {
        "text": "You play them on the corners.",
        "start": 402.169,
        "duration": 1.791
    },
    {
        "text": "Meaning that each tile actually represents\nfour possible positions, which may or may",
        "start": 403.96,
        "duration": 4.54
    },
    {
        "text": "not be shared with more of the surrounding\ntiles.",
        "start": 408.5,
        "duration": 2.7
    },
    {
        "text": "Bottom line: there are more possible board\nconfigurations in a game of Go than there",
        "start": 411.2,
        "duration": 4.38
    },
    {
        "text": "are atoms in the universe.",
        "start": 415.58,
        "duration": 2.47
    },
    {
        "text": "Secondly, no Go stone is inherently more valuable\nthan any other stone on the board.",
        "start": 418.05,
        "duration": 4.63
    },
    {
        "text": "This is different from chess, where a queen,\nfor example, is much more valuable than a pawn.",
        "start": 422.68,
        "duration": 5.54
    },
    {
        "text": "That kind of relationship is something you\ncan program an AI to understand.",
        "start": 428.23,
        "duration": 2.66
    },
    {
        "text": "You can feed that into a production system.",
        "start": 430.89,
        "duration": 2.22
    },
    {
        "text": "But a stone in Go gets its value from its\nposition on the board relative to the positions",
        "start": 433.11,
        "duration": 4.149
    },
    {
        "text": "of all the other stones on the board.",
        "start": 437.259,
        "duration": 1.641
    },
    {
        "text": "The objective in Go is to use your stones\nto surround more territory than your opponent.",
        "start": 438.9,
        "duration": 4.889
    },
    {
        "text": "So the value of any one move is often subjective.",
        "start": 443.789,
        "duration": 3.38
    },
    {
        "text": "Even high level Go players sometimes have\na hard time explaining how they know a good",
        "start": 447.169,
        "duration": 4.211
    },
    {
        "text": "move from a bad one.",
        "start": 451.38,
        "duration": 1.259
    },
    {
        "text": "And you know what computers are really bad\nat?",
        "start": 452.639,
        "duration": 2.101
    },
    {
        "text": "Being subjective.",
        "start": 454.74,
        "duration": 1.06
    },
    {
        "text": "Also, calculating positions that run into\nthe trillions of trillions.",
        "start": 455.8,
        "duration": 3.86
    },
    {
        "text": "The Deep Blue brute force approach was not\ngoing to get anywhere with Go.",
        "start": 459.66,
        "duration": 3.88
    },
    {
        "text": "So AlphaGo is not a brute force program.",
        "start": 463.54,
        "duration": 3.03
    },
    {
        "text": "It uses deep neural networks: the same kind\nof technology that's used by facial recognition software.",
        "start": 466.57,
        "duration": 5.91
    },
    {
        "text": "Instead of calculating stone positions piece\nby piece, it looks for patterns on the board.",
        "start": 472.48,
        "duration": 4.39
    },
    {
        "text": "Just like facial recognition programs will\nsearch an image for things that might be eyes,",
        "start": 476.87,
        "duration": 3.96
    },
    {
        "text": "noses, and mouths, AlphaGo looks for patterns\nof stones that might offer strong or weak",
        "start": 480.83,
        "duration": 5.35
    },
    {
        "text": "tactical opportunities.",
        "start": 486.18,
        "duration": 1.0
    },
    {
        "text": "But how does it know what makes something\na strong or weak opportunity?",
        "start": 487.18,
        "duration": 3.37
    },
    {
        "text": "I mean, we said the value of any specific\nposition is subjective, right?",
        "start": 490.55,
        "duration": 4.22
    },
    {
        "text": "Here's where you need to know how deep neural\nnetworks work.",
        "start": 494.77,
        "duration": 2.83
    },
    {
        "text": "A deep neural network is made up of layers\nof different computer systems, called 'neurons,'",
        "start": 497.6,
        "duration": 5.23
    },
    {
        "text": "all stacked up on top of each other and running\nin parallel.",
        "start": 502.83,
        "duration": 2.91
    },
    {
        "text": "This allows the network to analyse the same\nproblem from multiple different angles at",
        "start": 505.74,
        "duration": 3.89
    },
    {
        "text": "the same time.",
        "start": 509.63,
        "duration": 1.0
    },
    {
        "text": "Each layer judges the same image by different\ncriteria.",
        "start": 510.63,
        "duration": 2.829
    },
    {
        "text": "So, one layer will look at the picture of\nthe Go board and pick out all of the legal moves.",
        "start": 513.459,
        "duration": 4.95
    },
    {
        "text": "The next layer might examine the board for\nareas that aren't under anyone's control yet.",
        "start": 518.409,
        "duration": 2.951
    },
    {
        "text": "The layer beneath that could be keeping track\nof how long it's been since either player",
        "start": 521.36,
        "duration": 3.77
    },
    {
        "text": "has made a move in any particular region of\nthe board.",
        "start": 525.13,
        "duration": 2.64
    },
    {
        "text": "That tells the program which areas are currently\nbeing fought over, and which ones might be",
        "start": 527.77,
        "duration": 3.86
    },
    {
        "text": "safe to ignore for a while.",
        "start": 531.63,
        "duration": 1.35
    },
    {
        "text": "The layer beneath /that/ might be comparing\nthe patterns of white and black stones to",
        "start": 532.98,
        "duration": 3.96
    },
    {
        "text": "its internal database, to see if anything\nhappening on the board looks like anything",
        "start": 536.94,
        "duration": 3.95
    },
    {
        "text": "it's seen before.",
        "start": 540.89,
        "duration": 1.11
    },
    {
        "text": "And so on, and so on.",
        "start": 542.0,
        "duration": 1.87
    },
    {
        "text": "AlphaGo has 48 layers of neurons, each with\nits own way of evaluating the board.",
        "start": 543.87,
        "duration": 5.29
    },
    {
        "text": "Those layers send information up and down\nthe stack to all of the other layers.",
        "start": 549.16,
        "duration": 4.36
    },
    {
        "text": "So if one layer turns up something really\npromising, the other layers will all focus",
        "start": 553.52,
        "duration": 4.1
    },
    {
        "text": "on that area of the board.",
        "start": 557.62,
        "duration": 1.409
    },
    {
        "text": "When all of the layers agree on a move as\nmeeting their own criteria for what makes",
        "start": 559.029,
        "duration": 3.941
    },
    {
        "text": "a 'good move,' AlphaGo plays a stone.",
        "start": 562.97,
        "duration": 2.58
    },
    {
        "text": "By using a deep neural network in this way,\nthe program can actually mimic human intuition",
        "start": 565.55,
        "duration": 4.55
    },
    {
        "text": "and creativity.",
        "start": 570.1,
        "duration": 1.08
    },
    {
        "text": "AlphaGo defeated Lee Sedol 4 games to 1.",
        "start": 571.18,
        "duration": 3.54
    },
    {
        "text": "Sedol is the Garry Kasparov of the Go world.",
        "start": 574.72,
        "duration": 3.0
    },
    {
        "text": "And AlphaGo is only going to get smarter.",
        "start": 577.72,
        "duration": 2.91
    },
    {
        "text": "So when it comes to game-playing AIs … there\naren’t really any challenges left anymore.",
        "start": 580.63,
        "duration": 5.39
    },
    {
        "text": "Go was it: the most complex board game people\nhave ever devised.",
        "start": 586.02,
        "duration": 4.439
    },
    {
        "text": "Though I kind of would like to see it play\nArkham Horror.",
        "start": 590.459,
        "duration": 2.211
    },
    {
        "text": "But we made AlphaGo.",
        "start": 592.67,
        "duration": 2.06
    },
    {
        "text": "We made Deep Blue.",
        "start": 594.73,
        "duration": 1.41
    },
    {
        "text": "These programs are manifestations of our intelligence\nand curiosity.",
        "start": 596.14,
        "duration": 4.22
    },
    {
        "text": "And if we can create an AI that can beat Lee\nSedol at the most complicated and intuitive",
        "start": 600.36,
        "duration": 4.28
    },
    {
        "text": "game ever played, then who knows what else\nwe can do.",
        "start": 604.64,
        "duration": 3.75
    },
    {
        "text": "Thanks for watching this episode of SciShow,\nwhich was brought to you by our patrons on Patreon.",
        "start": 608.39,
        "duration": 4.4
    },
    {
        "text": "If you want to help support this show, you\ncan go to patreon.com/scishow.",
        "start": 612.83,
        "duration": 2.62
    },
    {
        "text": "And if you just want to keep getting smarter\nwith us, you can go to youtube.com/scishow",
        "start": 615.45,
        "duration": 2.68
    },
    {
        "text": "and subscribe!",
        "start": 618.13,
        "duration": 1.76
    }
]